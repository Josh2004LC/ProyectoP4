/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package app.modulos.factura;

import app.pos.entities.Cliente;
import app.pos.entities.Factura;
import app.pos.entities.LineaFactura;
import app.pos.entities.Usuario;
import app.pos.logica.LCliente;
import app.pos.logica.LFactura;
import app.pos.logica.LLineaFactura;
import app.pos.logica.LUsuario;
import java.awt.Cursor;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Josh
 */
public class ActualizarFactura extends javax.swing.JInternalFrame {

    private Factura factura;
    ArrayList<LineaFactura> lineasDeFactura = new ArrayList<>();
    private int idCliente = 0;
    private Cliente cliente;
    private Usuario usuario;
    private int idFactura;
    private int idLineaFactura;
    private double cantidadADevolver;
    private String comentario;
    private Date fechaEmision;
    private double totalFacturaCargada;

    public ActualizarFactura() {
        initComponents();
        this.CargarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")


    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelDatos = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtIdentificacionCliente = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtVendedor = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtFecha = new javax.swing.JFormattedTextField();
        jLabel8 = new javax.swing.JLabel();
        txtNombreCliente = new javax.swing.JTextField();
        txtNombreVendedor = new javax.swing.JTextField();
        txtNumeroFactura = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        jPanelTotales = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        lbTotalFactura = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtLocal = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbLineas = new javax.swing.JTable();
        jPanelOpciones = new javax.swing.JPanel();
        btnGuardar = new javax.swing.JButton();
        btnDevolverProducto = new javax.swing.JButton();

        jLabel1.setText("Cliente");

        jLabel2.setText("Identificaci√≥n");

        txtIdentificacionCliente.setEditable(false);
        txtIdentificacionCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdentificacionClienteActionPerformed(evt);
            }
        });
        txtIdentificacionCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtIdentificacionClienteKeyPressed(evt);
            }
        });

        jLabel5.setText("Vendedor");

        txtVendedor.setEditable(false);
        txtVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVendedorActionPerformed(evt);
            }
        });
        txtVendedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtVendedorKeyPressed(evt);
            }
        });

        jLabel6.setText("Fecha");

        txtFecha.setEditable(false);
        txtFecha.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd-MM-yy"))));

        jLabel8.setText("Nombre");

        txtNombreCliente.setEditable(false);

        txtNombreVendedor.setEditable(false);
        txtNombreVendedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreVendedorActionPerformed(evt);
            }
        });

        txtNumeroFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroFacturaActionPerformed(evt);
            }
        });
        txtNumeroFactura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNumeroFacturaKeyPressed(evt);
            }
        });

        jLabel11.setText("# Factura");

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/icons8-search-16.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelDatosLayout = new javax.swing.GroupLayout(jPanelDatos);
        jPanelDatos.setLayout(jPanelDatosLayout);
        jPanelDatosLayout.setHorizontalGroup(
            jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanelDatosLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDatosLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(17, 17, 17)
                        .addComponent(txtIdentificacionCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelDatosLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDatosLayout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(17, 17, 17)
                                .addComponent(txtNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelDatosLayout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNumeroFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnBuscar)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtNombreVendedor, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18))
        );
        jPanelDatosLayout.setVerticalGroup(
            jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDatosLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtIdentificacionCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDatosLayout.createSequentialGroup()
                        .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNombreVendedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDatosLayout.createSequentialGroup()
                        .addGroup(jPanelDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtNumeroFactura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscar))
                        .addGap(21, 21, 21))))
        );

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel7.setText("Total");

        lbTotalFactura.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        lbTotalFactura.setForeground(new java.awt.Color(51, 255, 51));
        lbTotalFactura.setText("0");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        jLabel9.setText("‚Ç°");

        jLabel10.setText("Local");

        txtLocal.setEditable(false);
        txtLocal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLocalActionPerformed(evt);
            }
        });
        txtLocal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtLocalKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout jPanelTotalesLayout = new javax.swing.GroupLayout(jPanelTotales);
        jPanelTotales.setLayout(jPanelTotalesLayout);
        jPanelTotalesLayout.setHorizontalGroup(
            jPanelTotalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelTotalesLayout.createSequentialGroup()
                .addGroup(jPanelTotalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelTotalesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelTotalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addGroup(jPanelTotalesLayout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbTotalFactura, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanelTotalesLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtLocal, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        jPanelTotalesLayout.setVerticalGroup(
            jPanelTotalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelTotalesLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanelTotalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelTotalesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbTotalFactura, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE))
                .addContainerGap())
        );

        tbLineas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbLineas);

        btnGuardar.setText("Guardar");
        btnGuardar.setEnabled(false);
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnDevolverProducto.setText("Devolver Producto");
        btnDevolverProducto.setEnabled(false);
        btnDevolverProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDevolverProductoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelOpcionesLayout = new javax.swing.GroupLayout(jPanelOpciones);
        jPanelOpciones.setLayout(jPanelOpcionesLayout);
        jPanelOpcionesLayout.setHorizontalGroup(
            jPanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOpcionesLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(btnGuardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDevolverProducto)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelOpcionesLayout.setVerticalGroup(
            jPanelOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
            .addComponent(btnDevolverProducto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelOpciones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                .addComponent(jPanelDatos, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 577, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(jPanelTotales, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelOpciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelTotales, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 406, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIdentificacionClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdentificacionClienteKeyPressed
        // if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
        //    this.CargarCliente();
        // }
    }//GEN-LAST:event_txtIdentificacionClienteKeyPressed

    private void txtVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVendedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVendedorActionPerformed

    private void txtVendedorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtVendedorKeyPressed
        // if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
        //     this.CargarVendedor();
        // }
    }//GEN-LAST:event_txtVendedorKeyPressed

    private void txtNombreVendedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreVendedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreVendedorActionPerformed

    private void txtLocalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLocalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLocalActionPerformed

    private void txtLocalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtLocalKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLocalKeyPressed

    private void btnDevolverProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDevolverProductoActionPerformed
        int filaSeleccionada = tbLineas.getSelectedRow();
        if (filaSeleccionada >= 0) {
            // Obtener el modelo de la tabla
            DefaultTableModel modelo = (DefaultTableModel) tbLineas.getModel();
            // Obtener el valor del ID de la l√≠nea de factura
            this.idLineaFactura = (Integer) modelo.getValueAt(filaSeleccionada, 0);

            this.cantidadADevolver = Double.parseDouble(JOptionPane.showInputDialog(this,
                    "Ingrese la cantidad a devolver ", JOptionPane.QUESTION_MESSAGE).trim().replace(',', '.'));

            this.procesarDevolucion(idLineaFactura, cantidadADevolver);
            lineasDeFactura.clear();
            this.CargarTabla();
            this.procesarFactura(idFactura);
            this.sumarTotalLineas();

        } else {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione una fila.", "Aviso", JOptionPane.WARNING_MESSAGE);
        }

//  this.LimFacturaNueva();
    }//GEN-LAST:event_btnDevolverProductoActionPerformed

    private void txtNumeroFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroFacturaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroFacturaActionPerformed

    private void txtNumeroFacturaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroFacturaKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroFacturaKeyPressed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        this.Buscar();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void txtIdentificacionClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdentificacionClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdentificacionClienteActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
       double totalFactura = Double.parseDouble(lbTotalFactura.getText());
        double diferencia = this.totalFacturaCargada - totalFactura;
        try {
            this.guardarFactura();
            if (totalFactura == 0.0) {
                JOptionPane.showMessageDialog(this, "Se actualiz√≥ con √©xito la factura" );
            } else {
                JOptionPane.showMessageDialog(this, "Se actualiz√≥ con √©xito la factura " 
                    + "\nDiferencia de dinero a favor del cliente: " + diferencia );
            }
            
            this.dispose();
            
        } catch (ParseException ex) {
            Logger.getLogger(ActualizarFactura.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void Buscar() {
        if (this.txtNumeroFactura.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "El numero de factura es requerido para la consulta.", "Aviso", JOptionPane.WARNING_MESSAGE);
            this.txtNumeroFactura.requestFocus();
            return;
        }

        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        this.factura = new LFactura().Consultar(Integer.parseInt(this.txtNumeroFactura.getText().trim()));
        if (this.factura != null && this.factura.getIdFactura() > 0) {
            this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));

            this.idFactura = Integer.parseInt(this.txtNumeroFactura.getText().trim());

            this.idCliente = this.factura.getIdCliente();

            this.txtVendedor.setText(String.valueOf(this.factura.getIdUsuario()));
            this.txtVendedor.setEditable(false);

            this.fechaEmision = this.factura.getFechaEmision();
            SimpleDateFormat formatoFecha = new SimpleDateFormat("dd/MM/yy");
            String fechaFormateada = formatoFecha.format(fechaEmision);
            this.txtFecha.setText(fechaFormateada);
            this.txtFecha.setEditable(false);

            this.comentario = this.factura.getComentario();

            this.txtLocal.setText(String.valueOf(this.factura.getIdLocal()));
            this.txtLocal.setEditable(false);

            double total = this.factura.getTotal();
            this.lbTotalFactura.setText(String.valueOf(total));
            this.totalFacturaCargada = total;

            this.CargarCliente();
            this.CargarVendedor();
            this.procesarFactura(idFactura);

            this.btnDevolverProducto.setEnabled(true);
            this.btnGuardar.setEnabled(true);
        } else {
            this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            JOptionPane.showMessageDialog(this, "No se encontr√≥ la factura el # " + this.txtNumeroFactura.getText().trim().equals(""), "Aviso", JOptionPane.ERROR_MESSAGE);
            this.txtNumeroFactura.requestFocus();
        }
    }

    private void sumarTotalLineas() {
        double sumaTotal = 0.0;

        // Recorremos cada objeto LineaFactura en el ArrayList
        for (LineaFactura linea : lineasDeFactura) {
            // Sumamos el valor del campo 'total' de cada LineaFactura al total general
            sumaTotal += linea.getTotal();
        }

        lbTotalFactura.setText(String.valueOf(sumaTotal)); // Actualizamos el JLabel con la suma
    }

    public void procesarDevolucion(int idLineaFactura, double cantidadADevolver) {

        LLineaFactura lLineaFactura = new LLineaFactura();
        // Llamar al m√©todo actualizarLineaFactura
        String resultado = lLineaFactura.actualizarLineaFactura(idLineaFactura, cantidadADevolver);
        // Mostrar el resultado 
        JOptionPane.showMessageDialog(this, "Resultado de la actualizaci√≥n: " + resultado);

    }

    public void procesarFactura(int idFactura) {

        LLineaFactura lLineaFactura = new LLineaFactura();

        // Llama al m√©todo ConsultarLineas para obtener todas las l√≠neas de la factura
        ArrayList<LineaFactura> lineasFactura = lLineaFactura.ConsultarLineas(idFactura);

        // Verificar si hay l√≠neas de factura
        if (lineasFactura != null && !lineasFactura.isEmpty()) {
            this.CargarTabla(lineasFactura);
            this.lineasDeFactura = lineasFactura;
        } else {
            JOptionPane.showMessageDialog(this, "No se encontraron l√≠neas para la factura # " + idFactura);
            
        }
    }

    private void CargarTabla() {

        String[] columnas = new String[]{
            "ID_LINEA_FACTURA",
            "CODIGO",
            "DESCRIPCION",
            "CANTIDAD",
            "PRECIO",
            "TOTAL"
        };

        DefaultTableModel obModelo = new DefaultTableModel(columnas, 0);

        for (LineaFactura linea : lineasDeFactura) {
            obModelo.addRow(new Object[]{
                linea.getIdLineaFactura(),
                linea.getCodigo(),
                linea.getDescripcion(),
                linea.getCantidad(),
                linea.getPrecio(),
                linea.getTotal()
            });
        }

        this.tbLineas.setModel(obModelo);

        // Hacer la primera columna (ID) invisible
        tbLineas.getColumnModel().getColumn(0).setMinWidth(0);
        tbLineas.getColumnModel().getColumn(0).setMaxWidth(0);
        tbLineas.getColumnModel().getColumn(0).setPreferredWidth(0);
    }

    private void CargarTabla(ArrayList<LineaFactura> lineasDeFactura) {

        String[] columnas = new String[]{
            "ID_LINEA_FACTURA",
            "CODIGO",
            "DESCRIPCION",
            "CANTIDAD",
            "PRECIO",
            "TOTAL"
        };

        DefaultTableModel obModelo = new DefaultTableModel(columnas, 0);

        for (LineaFactura linea : lineasDeFactura) {
            obModelo.addRow(new Object[]{
                linea.getIdLineaFactura(),
                linea.getCodigo(),
                linea.getDescripcion(),
                linea.getCantidad(),
                linea.getPrecio(),
                linea.getTotal()
            });
        }

        this.tbLineas.setModel(obModelo);

        // Hacer la primera columna (ID) invisible
        tbLineas.getColumnModel().getColumn(0).setMinWidth(0);
        tbLineas.getColumnModel().getColumn(0).setMaxWidth(0);
        tbLineas.getColumnModel().getColumn(0).setPreferredWidth(0);
    }

    private void CargarCliente() {
        if (this.idCliente == 0) {
            JOptionPane.showMessageDialog(this, "El ID del cliente es requerido.", "Aviso", JOptionPane.WARNING_MESSAGE);
            return;
        }

        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        this.cliente = new LCliente().Consultar(this.idCliente);
        if (this.cliente != null && this.cliente.getIdCliente() > 0) {
            this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));

            this.txtNombreCliente.setText(this.cliente.getNombre() + " " + this.cliente.getApellidos());
            this.txtNombreCliente.setEditable(false);
            this.txtIdentificacionCliente.setText(this.cliente.getIdentificacion());
            this.txtIdentificacionCliente.setEditable(false);

        } else {
            this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            JOptionPane.showMessageDialog(this, "No se encontr√≥ el cliente con ese id.", "Aviso", JOptionPane.ERROR_MESSAGE);

        }
    }

    private void CargarVendedor() {
        if (this.txtVendedor.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(this, "El id del vendedor es requerido.", "Aviso", JOptionPane.WARNING_MESSAGE);
            this.txtVendedor.requestFocus();
            return;
        }

        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        this.usuario = new LUsuario().Consultar(Integer.parseInt(this.txtVendedor.getText().trim()));
        if (this.usuario != null && this.usuario.getIdUsuario() > 0) {
            this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));

            this.txtNombreVendedor.setText(this.usuario.getNombre() + " " + this.usuario.getApellidos());
            this.txtNombreVendedor.setEditable(false);

        } else {
            this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
            JOptionPane.showMessageDialog(this, "No se encontr√≥ el vendedor con ese codigo.", "Aviso", JOptionPane.ERROR_MESSAGE);
            this.txtVendedor.requestFocus();
        }
    }

    private void guardarFactura() throws ParseException {
        double totalFactura = Double.parseDouble(lbTotalFactura.getText());

        int operacion = new LFactura().Actualizar(new Factura(
                idFactura,
                Integer.parseInt(this.txtVendedor.getText().trim()),
                idCliente,
                Integer.parseInt(txtLocal.getText().trim()),
                this.comentario,
                this.fechaEmision,
                totalFactura,
                1
        ));

        if (operacion == -1) {
            JOptionPane.showMessageDialog(this, "No se pudo generar la factura,", "Aviso", JOptionPane.ERROR_MESSAGE);

        } else {
            idFactura = operacion;
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnDevolverProducto;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanelDatos;
    private javax.swing.JPanel jPanelOpciones;
    private javax.swing.JPanel jPanelTotales;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbTotalFactura;
    private javax.swing.JTable tbLineas;
    private javax.swing.JFormattedTextField txtFecha;
    private javax.swing.JTextField txtIdentificacionCliente;
    private javax.swing.JTextField txtLocal;
    private javax.swing.JTextField txtNombreCliente;
    private javax.swing.JTextField txtNombreVendedor;
    private javax.swing.JTextField txtNumeroFactura;
    private javax.swing.JTextField txtVendedor;
    // End of variables declaration//GEN-END:variables

}
