/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package app.modulos.cliente;

import app.pos.entities.Cliente;
import app.pos.logica.LCliente;
import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Josh
 */
public class ListarCliente extends javax.swing.JInternalFrame {

    String estadoMet;
    public ListarCliente() {
        initComponents();
        this.CargarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPrincipal = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        btnLimpiar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbClientes = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);

        jLabel1.setText("Buscar:");

        btnLimpiar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/icons8-broom-16.png"))); // NOI18N
        btnLimpiar.setText("Limpiar");
        btnLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarActionPerformed(evt);
            }
        });

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/iconos/icons8-search-16.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        tbClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbClientes);

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnLimpiar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnLimpiar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleName("Lista de clientes registrados");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarActionPerformed
        this.txtBuscar.setText("");
        this.txtBuscar.requestFocus();
        this.CargarTabla();
    }//GEN-LAST:event_btnLimpiarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        this.Buscar();
        this.txtBuscar.requestFocus();
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void CargarTabla() {
        ArrayList<Cliente> clientes = new LCliente().Listar();
        
        String[] columnas = new String[]{
            "ID",
            "Tipo Identificación",
            "Identificación",
            "Nombre",
            "Correo",
            "Teléfono",
            "Estado"
        };
        
        DefaultTableModel obModelo = new DefaultTableModel(columnas, 0);
        
        for (Cliente cliente : clientes) {
            obModelo.addRow(new Object[]{
                cliente.getIdCliente()+ "",
                cliente.getTipoIdentificacion().getNombre(),
                cliente.getIdentificacion(),
                cliente.getNombre() + " " + cliente.getApellidos(),
                cliente.getCorreo(),
                cliente.getTelefono(),
                this.ObtenerEstado(cliente.getEstado())
            });
        }
        
        this.tbClientes.setModel(obModelo);
    }
    
    private void CargarTabla(ArrayList<Cliente> clientes) {
        String[] columnas = new String[]{
            "ID",
            "Tipo Identificación",
            "Identificación",
            "Nombre",
            "Correo",
            "Teléfono",
            "Estado"
        };
        
        DefaultTableModel obModelo = new DefaultTableModel(columnas, 0);
        
        for (Cliente cliente : clientes) {
            obModelo.addRow(new Object[]{
                cliente.getIdCliente()+ "",
                cliente.getTipoIdentificacion().getIdTipoIdentificacion(),
                cliente.getIdentificacion(),
                cliente.getNombre() + " " + cliente.getApellidos(),
                cliente.getCorreo(),
                cliente.getTelefono(),
                this.ObtenerEstado(cliente.getEstado())
            });
        }
        
        this.tbClientes.setModel(obModelo);
        
    }
    
    private String ObtenerEstado(int estado) {
    if (estado == 1) {
        return "Activo";
    } else {
        return "Inactivo";
    }
}
    
    private void Buscar() {
        // Obtener el valor del buscador.
        String valor = this.txtBuscar.getText().trim().toLowerCase();

        // Validar el texto a buscar
        if (!valor.isEmpty() && !valor.isBlank()) {
            // Cargar empleados
            ArrayList<Cliente> clientes = new LCliente().Listar();

            if (clientes != null && !clientes.isEmpty()) {
                List<Cliente> finales = clientes.stream()
                        .filter(emp -> (emp.getIdCliente()+ "").contains(valor)
                        || emp.getTipoIdentificacion().getNombre().trim().toLowerCase().contains(valor)
                        || emp.getIdentificacion().trim().toLowerCase().contains(valor)
                        || emp.getNombre().trim().toLowerCase().contains(valor)
                        || emp.getApellidos().trim().toLowerCase().contains(valor)
                        || emp.getTelefono().trim().toLowerCase().contains(valor)
                        || emp.getCorreo().trim().toLowerCase().contains(valor)
                        || (emp.getEstado()+ "").contains(valor)
                        ).collect(Collectors.toList());

                this.CargarTabla((ArrayList<Cliente>) finales);
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnLimpiar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JTable tbClientes;
    private javax.swing.JTextField txtBuscar;
    // End of variables declaration//GEN-END:variables
}
